{"ast":null,"code":"var _jsxFileName = \"/home/dev/Projects/test_brightlab/src/CommentList.tsx\";\nimport React from \"react\";\nimport { Typography } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentList = props => {\n  const {\n    Text\n  } = Typography;\n  const start = (props.currentPage - 1) * props.pageSize;\n  const end = start + props.pageSize;\n  const page = props.comments.slice(start, end);\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: page.map(elem => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          strong: true,\n          children: elem.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: elem.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_c = CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","Typography","CommentList","props","Text","start","currentPage","pageSize","end","page","comments","slice","display","flexDirection","map","elem","email","body"],"sources":["/home/dev/Projects/test_brightlab/src/CommentList.tsx"],"sourcesContent":["import React from \"react\";\nimport { Pagination, Typography, Input } from \"antd\";\n\nexport interface comment {\n    postId: number,\n    id: number,\n    name: string,\n    email: string,\n    body: string\n\n}\n\ninterface Props {\n    pageSize: number,\n    currentPage: number,\n    comments: comment[]\n}\n\nexport const CommentList: React.FC<Props> = (props)=>{\n    const {Text} = Typography;\n    const start = (props.currentPage - 1) * props.pageSize\n    const end = start + props.pageSize\n    const page = props.comments.slice(start, end)\n\n    return <Typography style={{display: 'flex', flexDirection: 'column'}} >\n    {page.map((elem)=>{ \n            return (\n            <>\n            <Text strong>{elem.email}</Text>\n            <Text>{elem.body}</Text>\n            </>\n            )\n          })}      \n    </Typography>\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAqBC,UAArB,QAA8C,MAA9C;;;AAiBA,OAAO,MAAMC,WAA4B,GAAIC,KAAD,IAAS;EACjD,MAAM;IAACC;EAAD,IAASH,UAAf;EACA,MAAMI,KAAK,GAAG,CAACF,KAAK,CAACG,WAAN,GAAoB,CAArB,IAA0BH,KAAK,CAACI,QAA9C;EACA,MAAMC,GAAG,GAAGH,KAAK,GAAGF,KAAK,CAACI,QAA1B;EACA,MAAME,IAAI,GAAGN,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBN,KAArB,EAA4BG,GAA5B,CAAb;EAEA,oBAAO,QAAC,UAAD;IAAY,KAAK,EAAE;MAACI,OAAO,EAAE,MAAV;MAAkBC,aAAa,EAAE;IAAjC,CAAnB;IAAA,UACNJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAQ;MACV,oBACA;QAAA,wBACA,QAAC,IAAD;UAAM,MAAM,MAAZ;UAAA,UAAcA,IAAI,CAACC;QAAnB;UAAA;UAAA;UAAA;QAAA,QADA,eAEA,QAAC,IAAD;UAAA,UAAOD,IAAI,CAACE;QAAZ;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA,gBADA;IAMD,CAPN;EADM;IAAA;IAAA;IAAA;EAAA,QAAP;AAUH,CAhBM;KAAMf,W"},"metadata":{},"sourceType":"module"}