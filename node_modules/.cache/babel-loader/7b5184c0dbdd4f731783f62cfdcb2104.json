{"ast":null,"code":"var _jsxFileName = \"/home/dev/Projects/test_brightlab/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Pagination, Typography, Input } from \"antd\"; // import CommentList from \"./CommentList\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    Text\n  } = Typography;\n  const PAGE_SIZE = 10;\n  const {\n    Search\n  } = Input;\n  const [comments, setComments] = useState([]);\n  const [elem, setElem] = useState();\n  const [currentPage, setcurrentPage] = useState(1);\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    const comments = 'https://jsonplaceholder.typicode.com/comments';\n    console.log(email);\n    const url = email === '' ? comments : comments + `?email=${email}`;\n    console.log(url);\n    fetch(url).then(response => response.json()).then(json => setComments(json));\n  }, [email]);\n  useEffect(() => {\n    const start = (currentPage - 1) * PAGE_SIZE;\n    const end = start + PAGE_SIZE;\n    const com = comments.slice(start, end);\n\n    const list = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: com.map(elem => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              width: 100,\n              fontWeight: \"bold\"\n            },\n            children: elem.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              width: 400,\n              textAlign: \"justify\"\n            },\n            children: elem.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this);\n\n    setElem(list);\n  }, [comments, currentPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E email\",\n      onSearch: value => setEmail(value),\n      allowClear: true,\n      enterButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      simple: true,\n      pageSize: PAGE_SIZE,\n      current: currentPage,\n      total: comments.length,\n      onChange: page => setcurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), elem]\n  }, void 0, true);\n};\n\n_s(App, \"TMmbJJiJTOvP+ZhPl3S3pG4PSxA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","Typography","Input","App","Text","PAGE_SIZE","Search","comments","setComments","elem","setElem","currentPage","setcurrentPage","email","setEmail","console","log","url","fetch","then","response","json","start","end","com","slice","list","display","flexDirection","map","width","fontWeight","textAlign","body","value","length","page"],"sources":["/home/dev/Projects/test_brightlab/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Pagination, Typography, Input } from \"antd\";\n// import CommentList from \"./CommentList\"\n\ninterface comment {\n    postId: number,\n    id: number,\n    name: string,\n    email: string,\n    body: string\n\n}\n\n\nconst App: React.FC = () =>{\n    const {Text} = Typography;\n    const PAGE_SIZE = 10\n    const { Search } = Input;\n    const [comments, setComments] = useState<comment[]>([])\n    const [elem, setElem] = useState<JSX.Element>()\n    const [currentPage, setcurrentPage]= useState(1)\n    const [email, setEmail] = useState('')\n    useEffect(()=>{\n    const comments = 'https://jsonplaceholder.typicode.com/comments'\n    console.log(email);\n    \n    const url = email === '' ? comments : comments+`?email=${email}`\n    console.log(url);\n    fetch(url)\n    .then(response => response.json())\n    .then(json => setComments(json))\n\n    },[email])\n    useEffect(()=>{\n        const start = (currentPage - 1) * PAGE_SIZE\n        const end = start + PAGE_SIZE\n        const com = comments.slice(start, end)\n        \n        const list = <div style={{display: 'flex', flexDirection: 'column'}}>{com.map((elem)=>{ \n            return (\n            <>\n            <p style={{width: 100, fontWeight: \"bold\" }}>{elem.email}</p>\n            <p style={{width: 400, textAlign: \"justify\"}} >{elem.body}</p>\n            </>\n            )\n          })}</div>\n        setElem(list)\n    \n    },[comments, currentPage])\n    return <>\n        <Search \n            placeholder=\"Поиск по email\" \n            onSearch={(value)=>setEmail(value)} \n            allowClear \n            enterButton \n        />\n        <Pagination \n            simple \n            pageSize={PAGE_SIZE} \n            current={currentPage} \n            total={comments.length} \n            onChange={(page) => setcurrentPage(page)}\n        />\n        {elem}\n        {/* <CommentList comments={comments} currentPage={currentPage} pageSize={PAGE_SIZE} /> */}\n    </>\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,QAA8C,MAA9C,C,CACA;;;;;AAYA,MAAMC,GAAa,GAAG,MAAK;EAAA;;EACvB,MAAM;IAACC;EAAD,IAASH,UAAf;EACA,MAAMI,SAAS,GAAG,EAAlB;EACA,MAAM;IAAEC;EAAF,IAAaJ,KAAnB;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAY,EAAZ,CAAxC;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAA+Bd,QAAQ,CAAC,CAAD,CAA7C;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;EACAC,SAAS,CAAC,MAAI;IACd,MAAMQ,QAAQ,GAAG,+CAAjB;IACAQ,OAAO,CAACC,GAAR,CAAYH,KAAZ;IAEA,MAAMI,GAAG,GAAGJ,KAAK,KAAK,EAAV,GAAeN,QAAf,GAA0BA,QAAQ,GAAE,UAASM,KAAM,EAA/D;IACAE,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACAC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIb,WAAW,CAACa,IAAD,CAFzB;EAIC,CAVQ,EAUP,CAACR,KAAD,CAVO,CAAT;EAWAd,SAAS,CAAC,MAAI;IACV,MAAMuB,KAAK,GAAG,CAACX,WAAW,GAAG,CAAf,IAAoBN,SAAlC;IACA,MAAMkB,GAAG,GAAGD,KAAK,GAAGjB,SAApB;IACA,MAAMmB,GAAG,GAAGjB,QAAQ,CAACkB,KAAT,CAAeH,KAAf,EAAsBC,GAAtB,CAAZ;;IAEA,MAAMG,IAAI,gBAAG;MAAK,KAAK,EAAE;QAACC,OAAO,EAAE,MAAV;QAAkBC,aAAa,EAAE;MAAjC,CAAZ;MAAA,UAAyDJ,GAAG,CAACK,GAAJ,CAASpB,IAAD,IAAQ;QAClF,oBACA;UAAA,wBACA;YAAG,KAAK,EAAE;cAACqB,KAAK,EAAE,GAAR;cAAaC,UAAU,EAAE;YAAzB,CAAV;YAAA,UAA8CtB,IAAI,CAACI;UAAnD;YAAA;YAAA;YAAA;UAAA,QADA,eAEA;YAAG,KAAK,EAAE;cAACiB,KAAK,EAAE,GAAR;cAAaE,SAAS,EAAE;YAAxB,CAAV;YAAA,UAAgDvB,IAAI,CAACwB;UAArD;YAAA;YAAA;YAAA;UAAA,QAFA;QAAA,gBADA;MAMD,CAPmE;IAAzD;MAAA;MAAA;MAAA;IAAA,QAAb;;IAQAvB,OAAO,CAACgB,IAAD,CAAP;EAEH,CAfQ,EAeP,CAACnB,QAAD,EAAWI,WAAX,CAfO,CAAT;EAgBA,oBAAO;IAAA,wBACH,QAAC,MAAD;MACI,WAAW,EAAC,mDADhB;MAEI,QAAQ,EAAGuB,KAAD,IAASpB,QAAQ,CAACoB,KAAD,CAF/B;MAGI,UAAU,MAHd;MAII,WAAW;IAJf;MAAA;MAAA;MAAA;IAAA,QADG,eAOH,QAAC,UAAD;MACI,MAAM,MADV;MAEI,QAAQ,EAAE7B,SAFd;MAGI,OAAO,EAAEM,WAHb;MAII,KAAK,EAAEJ,QAAQ,CAAC4B,MAJpB;MAKI,QAAQ,EAAGC,IAAD,IAAUxB,cAAc,CAACwB,IAAD;IALtC;MAAA;MAAA;MAAA;IAAA,QAPG,EAcF3B,IAdE;EAAA,gBAAP;AAiBH,CApDD;;GAAMN,G;;KAAAA,G;AAsDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}