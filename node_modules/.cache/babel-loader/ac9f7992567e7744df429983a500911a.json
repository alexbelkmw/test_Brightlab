{"ast":null,"code":"var _jsxFileName = \"/home/dev/Projects/test_brightlab/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Pagination, Input } from \"antd\";\nimport CommentList from \"./CommentList\"; // interface comment {\n//     postId: number,\n//     id: number,\n//     name: string,\n//     email: string,\n//     body: string\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const PAGE_SIZE = 10;\n  const {\n    Search\n  } = Input;\n  const [comments, setComments] = useState([]);\n  const [elem, setElem] = useState();\n  const [currentPage, setcurrentPage] = useState(1);\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    const comments = 'https://jsonplaceholder.typicode.com/comments';\n    console.log(email);\n    const url = email === '' ? comments : comments + `?email=${email}`;\n    console.log(url);\n    fetch(url).then(response => response.json()).then(json => setComments(json));\n  }, [email]); // useEffect(()=>{\n  //     const start = (currentPage - 1) * PAGE_SIZE\n  //     const end = start + PAGE_SIZE\n  //     const com = comments.slice(start, end)\n  //     const list = <Typography style={{display: 'flex', flexDirection: 'column'}}>{com.map((elem)=>{ \n  //         return (\n  //         <>\n  //         <Text strong>{elem.email}</Text>\n  //         <Text>{elem.body}</Text>\n  //         </>\n  //         )\n  //       })}</Typography>\n  //     setElem(list)\n  // },[comments, currentPage])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E email\",\n      onSearch: value => setEmail(value),\n      allowClear: true,\n      enterButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      simple: true,\n      pageSize: PAGE_SIZE,\n      current: currentPage,\n      total: comments.length,\n      onChange: page => setcurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments,\n      currentPage: currentPage,\n      pageSize: PAGE_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"er9rWCQu5VjmKBsn38HAn6Klb7E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","Input","CommentList","App","PAGE_SIZE","Search","comments","setComments","elem","setElem","currentPage","setcurrentPage","email","setEmail","console","log","url","fetch","then","response","json","value","length","page"],"sources":["/home/dev/Projects/test_brightlab/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Pagination, Typography, Input } from \"antd\";\nimport CommentList, {comment} from \"./CommentList\"\n\n// interface comment {\n//     postId: number,\n//     id: number,\n//     name: string,\n//     email: string,\n//     body: string\n\n// }\n\n\nconst App: React.FC = () =>{\n    const PAGE_SIZE = 10\n    const { Search } = Input;\n    const [comments, setComments] = useState<comment[]>([])\n    const [elem, setElem] = useState<JSX.Element>()\n    const [currentPage, setcurrentPage]= useState(1)\n    const [email, setEmail] = useState('')\n    useEffect(()=>{\n    const comments = 'https://jsonplaceholder.typicode.com/comments'\n    console.log(email);\n    \n    const url = email === '' ? comments : comments+`?email=${email}`\n    console.log(url);\n    fetch(url)\n    .then(response => response.json())\n    .then(json => setComments(json))\n\n    },[email])\n    // useEffect(()=>{\n    //     const start = (currentPage - 1) * PAGE_SIZE\n    //     const end = start + PAGE_SIZE\n    //     const com = comments.slice(start, end)\n        \n    //     const list = <Typography style={{display: 'flex', flexDirection: 'column'}}>{com.map((elem)=>{ \n    //         return (\n    //         <>\n    //         <Text strong>{elem.email}</Text>\n    //         <Text>{elem.body}</Text>\n    //         </>\n    //         )\n    //       })}</Typography>\n    //     setElem(list)\n    \n    // },[comments, currentPage])\n    return <>\n        <Search \n            placeholder=\"Поиск по email\" \n            onSearch={(value)=>setEmail(value)} \n            allowClear \n            enterButton \n        />\n        <Pagination \n            simple \n            pageSize={PAGE_SIZE} \n            current={currentPage} \n            total={comments.length} \n            onChange={(page) => setcurrentPage(page)}\n        />\n        <CommentList comments={comments} currentPage={currentPage} pageSize={PAGE_SIZE} />\n    </>\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,OAAOC,WAAP,MAAmC,eAAnC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA,MAAMC,GAAa,GAAG,MAAK;EAAA;;EACvB,MAAMC,SAAS,GAAG,EAAlB;EACA,MAAM;IAAEC;EAAF,IAAaJ,KAAnB;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAY,EAAZ,CAAxC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAA+Bb,QAAQ,CAAC,CAAD,CAA7C;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACAC,SAAS,CAAC,MAAI;IACd,MAAMO,QAAQ,GAAG,+CAAjB;IACAQ,OAAO,CAACC,GAAR,CAAYH,KAAZ;IAEA,MAAMI,GAAG,GAAGJ,KAAK,KAAK,EAAV,GAAeN,QAAf,GAA0BA,QAAQ,GAAE,UAASM,KAAM,EAA/D;IACAE,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACAC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIb,WAAW,CAACa,IAAD,CAFzB;EAIC,CAVQ,EAUP,CAACR,KAAD,CAVO,CAAT,CAPuB,CAkBvB;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,oBAAO;IAAA,wBACH,QAAC,MAAD;MACI,WAAW,EAAC,mDADhB;MAEI,QAAQ,EAAGS,KAAD,IAASR,QAAQ,CAACQ,KAAD,CAF/B;MAGI,UAAU,MAHd;MAII,WAAW;IAJf;MAAA;MAAA;MAAA;IAAA,QADG,eAOH,QAAC,UAAD;MACI,MAAM,MADV;MAEI,QAAQ,EAAEjB,SAFd;MAGI,OAAO,EAAEM,WAHb;MAII,KAAK,EAAEJ,QAAQ,CAACgB,MAJpB;MAKI,QAAQ,EAAGC,IAAD,IAAUZ,cAAc,CAACY,IAAD;IALtC;MAAA;MAAA;MAAA;IAAA,QAPG,eAcH,QAAC,WAAD;MAAa,QAAQ,EAAEjB,QAAvB;MAAiC,WAAW,EAAEI,WAA9C;MAA2D,QAAQ,EAAEN;IAArE;MAAA;MAAA;MAAA;IAAA,QAdG;EAAA,gBAAP;AAgBH,CAlDD;;GAAMD,G;;KAAAA,G;AAoDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}